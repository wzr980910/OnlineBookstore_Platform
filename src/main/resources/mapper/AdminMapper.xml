<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.platform.mapper.AdminMapper">

    <resultMap id="BaseResultMap" type="com.platform.pojo.Admin">
            <id property="id" column="id" jdbcType="INTEGER"/>
            <result property="adminName" column="adminName" jdbcType="VARCHAR"/>
            <result property="password" column="password" jdbcType="VARCHAR"/>
            <result property="level" column="level" jdbcType="INTEGER"/>
            <result property="createTime" column="createTime" jdbcType="TIMESTAMP"/>
            <result property="updateTime" column="updateTime" jdbcType="TIMESTAMP"/>
            <result property="isDeleted" column="isDeleted" jdbcType="TINYINT"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,adminName,password,
        level,createTime,updateTime,
        isDeleted
    </sql>

    <!--登录-->
    <select id="login" resultType="com.platform.pojo.Admin">
        SELECT
            id,
            adminName,
            authority
        FROM
            admin
        WHERE
            adminName = #{adminName} and password = #{password}
    </select>

    <!--通过adminName获取数据-->
    <select id="getByAdminName" resultType="com.platform.pojo.Admin">
        SELECT
            adminName,
            isDeleted
        FROM
            admin
        WHERE
            adminName = #{adminName}
    </select>

    <!--通过id获取数据-->
    <select id="getById" resultType="com.platform.pojo.Admin">
        SELECT
            adminName,
            isDeleted
        FROM
            admin
        WHERE
            id = #{id}
    </select>

    <!--添加管理员-->
    <insert id="addAdmin">
        INSERT INTO admin ( adminName, PASSWORD, authority, createTime, isDeleted )
        VALUES
            (#{admin.adminName},#{admin.password},
             #{admin.authority},#{admin.createTime},#{admin.isDeleted})
    </insert>

    <!--更新管理员信息-->
    <update id="updateByAdminName">
        update admin
        <set>
            <if test="password != null">password = #{admin.password},</if>
            <if test="authority != null">authority = #{admin.authority},</if>
            <if test="updateTime != null">updateTime = #{admin.updateTime},</if>
            <if test="isDeleted != null">isDeleted = #{admin.isDeleted}</if>
        </set>
        where id =#{admin.id}
    </update>

    <!--模糊查询管理员-->
    <select id="selectAdmin" resultType="com.platform.pojo.vo.AdminVo">
        select adminName ,authority ,isDeleted from admin
        <where>
            <if test="adminVo.adminName != null">
                adminName like CONCAT('%',#{adminVo.adminName},'%')
            </if>
            <if test="adminVo.authority != null">
                and authority = #{adminVo.authority}
            </if>
            <if test="adminVo.isDeleted != null">
                and isDeleted = #{adminVo.isDeleted}
            </if>>
            limit #{adminVo.current},#{adminVo.size}
        </where>
    </select>

    <!--批量注销管理员-->
    <update id="removeAdminsById">
        <foreach collection="admins" item="admin" separator=";">
            UPDATE admin
            SET isDeleted = #{admin.isDeleted},updateTime = now() where id = #{admin.id}
        </foreach>
    </update>

    <!--批量登记管理员-->
    <update id="listAdminsById">
        <foreach collection="admins" item="admin" separator=";">
            UPDATE admin
            SET isDeleted = #{admin.isDeleted},updateTime = now() where id = #{admin.id}
        </foreach>
    </update>

    <!--上传管理员头像-->
    <update id="updateAdminImg">
        update admin set picture = #{imgPath} where id = #{adminId}
    </update>

    <!--查询管理员数量-->
    <select id="selectTotal" resultType="Integer">
        select count(*)
        from admin
        <where>
            <if test="adminVo.adminName != null">
                adminName like CONCAT('%',#{adminVo.adminName},'%')
            </if>
            <if test="adminVo.authority != null">
                and authority = #{adminVo.authority}
            </if>
            <if test="adminVo.isDeleted != null">
                and isDeleted = #{adminVo.isDeleted}
            </if>>
            limit #{adminVo.current},#{adminVo.size}
        </where>
    </select>
</mapper>
