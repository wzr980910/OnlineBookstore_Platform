<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.platform.mapper.UserMapper">

    <resultMap id="BaseResultMap" type="com.platform.pojo.User">
            <id property="id" column="id" jdbcType="BIGINT"/>
            <result property="accountNumber" column="accountNumber" jdbcType="VARCHAR"/>
            <result property="password" column="password" jdbcType="VARCHAR"/>
            <result property="username" column="userName" jdbcType="VARCHAR"/>
            <result property="phoneNumber" column="phoneNumber" jdbcType="VARCHAR"/>
            <result property="picture" column="picture" jdbcType="VARCHAR"/>
            <result property="gender" column="gender" jdbcType="BIGINT"/>
            <result property="createTime" column="createTime" jdbcType="TIMESTAMP"/>
            <result property="updateTime" column="updateTime" jdbcType="TIMESTAMP"/>
            <result property="isDeleted" column="isDeleted" jdbcType="TINYINT"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,accountNumber,password,
        userName,phoneNumber,picture,gender,
        createTime,updateTime,isDeleted
    </sql>

    <!--根据accountNumber查询-->
    <select id="getByNumber" resultType="com.platform.pojo.User">
        select accountNumber,isDeleted from user where accountNumber = #{accountNumber}
    </select>

    <!--删除-->
    <update id="deleteByNumber">
        update user set isDeleted = #{isDeleted},updateTime = #{updateTime} where accountNumber = #{accountNumber}

    </update>

    <!--更新信息-->
    <update id="updateUser">
        update user set password=#{password},userName=#{userName},
                        phoneNumber=#{phoneNumber},picture=#{picture},gender=#{gender},updateTime=#{updateTime},
                        isDeleted=#{isDeleted} where accountNumber = #{accountNumber}
    </update>

    <!--根据条件模糊查询-->
    <select id="selectUser" resultType="com.platform.pojo.vo.UserVo">
        select * from user
        <where>
            <if test="userVo.accountNumber != null">
                accountNumber like CONCAT('%',#{userVo.accountNumber},'%')
            </if>
            <if test="userVo.userName != null">
                and userName like CONCAT('%',#{userVo.userName},'%')
            </if>
            <if test="userVo.gender != null">
                and gender = CONCAT('%',#{userVo.gender},'%')
            </if>
            <if test="userVo.phoneNumber != null">
                and phoneNumber like CONCAT('%',#{userVo.phoneNumber},'%')
            </if>
            <if test="userVo.isDeleted != null">
                and isDeleted = #{userVo.isDeleted}
            </if>
            limit #{userVo.pageNum},#{userVo.pageSize}
        </where>
    </select>
</mapper>
